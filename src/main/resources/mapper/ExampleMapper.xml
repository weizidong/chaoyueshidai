<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xin.chaoyueshidai.module.example.ExampleMapper" >
  <resultMap id="BaseResultMap" type="xin.chaoyueshidai.module.example.Example" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="topic" property="topic" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="xin.chaoyueshidai.module.example.Example" extends="BaseResultMap" >
    <result column="legend" property="legend" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, topic, url, pic, created, userid, type
  </sql>
  <sql id="Blob_Column_List" >
    legend
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="xin.chaoyueshidai.module.example.ExampleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from example
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xin.chaoyueshidai.module.example.ExampleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from example
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from example
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from example
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xin.chaoyueshidai.module.example.ExampleExample" >
    delete from example
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xin.chaoyueshidai.module.example.Example" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into example (topic, url, pic, 
      created, userid, type, 
      legend)
    values (#{topic,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{legend,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xin.chaoyueshidai.module.example.Example" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into example
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="topic != null" >
        topic,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="legend != null" >
        legend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="topic != null" >
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="legend != null" >
        #{legend,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xin.chaoyueshidai.module.example.ExampleExample" resultType="java.lang.Integer" >
    select count(*) from example
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update example
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topic != null" >
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.legend != null" >
        legend = #{record.legend,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update example
    set id = #{record.id,jdbcType=INTEGER},
      topic = #{record.topic,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      userid = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      legend = #{record.legend,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update example
    set id = #{record.id,jdbcType=INTEGER},
      topic = #{record.topic,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      userid = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xin.chaoyueshidai.module.example.Example" >
    update example
    <set >
      <if test="topic != null" >
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="legend != null" >
        legend = #{legend,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xin.chaoyueshidai.module.example.Example" >
    update example
    set topic = #{topic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      legend = #{legend,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.chaoyueshidai.module.example.Example" >
    update example
    set topic = #{topic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>