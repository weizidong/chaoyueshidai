<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xin.chaoyueshidai.module.user.UserMapper" >
  <resultMap id="BaseResultMap" type="xin.chaoyueshidai.module.user.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="subscribe" property="subscribe" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
    <result column="subscribe_time" property="subscribeTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, subscribe, openid, name, nickname, sex, city, headimgurl, subscribe_time, type, 
    login_time, created, tel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xin.chaoyueshidai.module.user.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xin.chaoyueshidai.module.user.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xin.chaoyueshidai.module.user.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (subscribe, openid, name, 
      nickname, sex, city, 
      headimgurl, subscribe_time, type, 
      login_time, created, tel
      )
    values (#{subscribe,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, 
      #{headimgurl,jdbcType=VARCHAR}, #{subscribeTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, #{tel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xin.chaoyueshidai.module.user.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subscribe != null" >
        subscribe,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="headimgurl != null" >
        headimgurl,
      </if>
      <if test="subscribeTime != null" >
        subscribe_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="tel != null" >
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subscribe != null" >
        #{subscribe,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null" >
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="subscribeTime != null" >
        #{subscribeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xin.chaoyueshidai.module.user.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subscribe != null" >
        subscribe = #{record.subscribe,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.headimgurl != null" >
        headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.subscribeTime != null" >
        subscribe_time = #{record.subscribeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      subscribe = #{record.subscribe,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
      subscribe_time = #{record.subscribeTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=TIMESTAMP},
      tel = #{record.tel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xin.chaoyueshidai.module.user.User" >
    update user
    <set >
      <if test="subscribe != null" >
        subscribe = #{subscribe,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null" >
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="subscribeTime != null" >
        subscribe_time = #{subscribeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.chaoyueshidai.module.user.User" >
    update user
    set subscribe = #{subscribe,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      subscribe_time = #{subscribeTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>